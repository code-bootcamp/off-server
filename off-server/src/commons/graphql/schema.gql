# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type UsersImage {
  id: String!
  url: String!
  user: User!
}

type User {
  id: String!
  name: String!
  email: String!
  password: String!
  nickname: String!
  usersimage: UsersImage
  phone: String!
  regDate: DateTime!
  deletedAt: String!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Category {
  id: String!
  name: String!
}

type SalesLocations {
  id: String!
  address: String!
  detailAddress: String!
}

type Board {
  id: String!
  title: String!
  contents: String!
  expDate: DateTime!
  status: BOARD_STATUS_ENUM!
  salesLocation: SalesLocations!
  regDate: DateTime!
  user: User!
  category: Category!
  boardImage: [BoardsImage!]!
  deletedAt: String!
}

enum BOARD_STATUS_ENUM {
  SALE
  SOLDOUT
  RESERVATION
}

type BoardsImage {
  id: String!
  url: String!
  board: Board!
}

type OrderHistory {
  id: String!
  orderDate: DateTime!
  user: User!
  board: Board!
}

type SalesHistory {
  id: String!
  salesDate: DateTime!
  user: User!
  board: Board!
}

type Fridge {
  id: String!
  user: User!
}

type FridgeFood {
  id: String!
  name: String!
  price: Int!
  expDate: DateTime!
  regDate: DateTime!
  alarm: DateTime!
  status: FRIDGE_STATUS_ENUM!
  fridge: Fridge!
  category: Category!
}

enum FRIDGE_STATUS_ENUM {
  FRIDGE
  FREEZER
  LIST
}

type ChatOutput {
  id: String!
  roomNumber: String!
  board: Board!
  lastMessage: String!
  userId: String!
  sendUserId: String!
}

type Chat {
  id: String!
  message: String!
  createAt: DateTime!
  chatRoomId: String!
  user: User!
}

type Query {
  fetchBoardTitle(title: String): JSONObject!
  fetchBoardCategory(category: String): JSONObject!
  fetchBoardLocation(location: String): JSONObject!
  fetchBoardSearch(title: String, category: String, location: String): JSONObject!
  fetchBoards: [Board!]!
  fetchBoard(id: String!): Board!
  fetchCategory: [Category!]!
  fetchMyChattingList: [ChatOutput!]!
  fetchChatHistory(chatRoomId: String!): [Chat!]!
  fetchFridgeFoods(page: Int, status: String): [FridgeFood!]!
  fetchFridgeFoodOne(foodId: String!): FridgeFood!
  fetchOrderHistory: [OrderHistory!]!
  fetchSalseHistory: [SalesHistory!]!
  fetchUsers: [User!]!
  fetchUserLoggedIn: User!
  fetchUserWithDeleted: [User!]!
}

"""
The `JSONObject` scalar type represents JSON objects as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSONObject

type Mutation {
  login(email: String!, password: String!): String!
  logout: String!
  restoreAccessToken: String!
  createBoard(createBoardInput: CreateBoardInput!): Board!
  updateBoard(boardId: String!, updateBoardInput: UpdateBoardInput!): Board!
  createReservation(boardId: String!, buyer: String!): Boolean!
  deleteBoard(boardId: String!): Boolean!
  deleteReservation(boardId: String!): Boolean!
  uploadFile(files: [Upload!]!): [String!]!
  createCategory(name: String!): Category!
  createFridgeFood(fridgeFoodInput: CreateFridgeFoodInput!, status: String!): FridgeFood!
  updateFridgeFoods(fridgeFoodId: String!, updateFridgeFoodInput: UpdateFridgeFoodInput!, status: String!): String!
  deleteFridgeFood(foodId: String!): Boolean!
  createUser(createUserInput: CreateUserInput!): User!
  getToken(phone: String!): String!
  checkValidToken(phone: String!, token: String!): String!
  updateUser(updateUserInput: updateUserInput!): User!
  deleteUser(email: String!): Boolean!
  restoreUser(email: String!): Boolean!
}

input CreateBoardInput {
  title: String!
  contents: String!
  categoryId: String!
  expDate: DateTime!
  salesLocations: SalesLocationsInput!
  url: [String!]!
}

input SalesLocationsInput {
  address: String!
  detailAddress: String!
}

input UpdateBoardInput {
  title: String
  contents: String
  categoryId: String
  expDate: DateTime
  salesLocations: SalesLocationsInput
  url: [String!]
}

"""The `Upload` scalar type represents a file upload."""
scalar Upload

input CreateFridgeFoodInput {
  name: String!
  price: Int!
  expDate: DateTime!
  alarm: DateTime!
  category: String!
}

input UpdateFridgeFoodInput {
  name: String!
  price: Int!
  expDate: DateTime!
  alarm: DateTime!
  category: String!
}

input CreateUserInput {
  email: String!
  name: String!
  password: String!
  phone: String!
  nickname: String!
}

input updateUserInput {
  email: String
  name: String
  password: String
  phone: String
  nickname: String
  image: String
}